{"version":3,"sources":["components/NavBar/NavBar.tsx","components/Button/Button.tsx","components/Card/Card.tsx","pages/overview/Overview.tsx","components/ExerciseChar/ExerciseChar.tsx","pages/exercise/subpages/Exercise.tsx","i18n/en.ts","pages/exercise/subpages/ResultDisplay.tsx","pages/exercise/TypingLesson.tsx","resources/loadLesson.ts","App.tsx","index.tsx"],"names":["NavBar","styled","div","StyledButton","button","PrimaryButton","Button","onClick","children","color","DisplayButton","default","primary","Card","LessonCard","lesson","title","description","to","id","Overview","overview","lessonData","map","key","cursorBlink","keyframes","StyledExerciseChar","span","CharOk","CharError","CurrentChar","ExerciseChar","data","isCurrent","displayChar","value","DisplayElement","ok","error","current","transparent","Exercise","completeLesson","useState","exerciseFields","setExerciseFields","currentIndex","setCurrentIndex","Date","startTime","setStartTime","isLastIndex","length","useEffect","handleKeyPress","e","target","document","body","preventDefault","mistakes","calculateMistakes","time","calculatePassedTime","keyValue","newExerciseFields","field","addEventListener","removeEventListener","text","item","filter","val","getTime","i18n","ResultDisplay","lessonStats","resetAction","TypingLesson","isComplete","setComplete","setLessonStats","useParams","find","split","forEach","push","loadLesson","parseInt","window","scrollTo","stats","Navigation","APP_TITLE","App","exact","path","component","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.380a4817.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const NavBar = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  height: 5rem;\n  background-color: white;\n  box-shadow: 0 0 0 1px rgba(16, 22, 26, 0.1), 0 0 0 rgba(16, 22, 26, 0),\n    0 1px 1px rgba(16, 22, 26, 0.2);\n  & > * {\n    padding: 0 2rem;\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ntype colors = \"default\" | \"primary\";\n\nconst StyledButton = styled.button`\n  background: red;\n  color: white;\n  padding: 0.5rem 0.75rem;\n  font-weight: bold;\n  cursor: pointer;\n`;\nconst PrimaryButton = styled(StyledButton)`\n  background: blue;\n`;\n\ninterface IButtonProps {\n  onClick?: () => void;\n  color?: colors;\n}\n/**\n * A Button Component\n * A button executes\n * @param props\n */\nexport const Button: React.FC<IButtonProps> = ({\n  onClick,\n  children,\n  color = \"default\",\n}) => {\n  const buttonTypes = {\n    default: StyledButton,\n    primary: PrimaryButton,\n  };\n  const DisplayButton = buttonTypes[color];\n  return <DisplayButton onClick={onClick}>{children}</DisplayButton>;\n};\n","import styled from \"styled-components\";\n\nexport const Card = styled.div`\n  padding: 1.5rem;\n  margin: 1rem;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  border-radius: 0.2rem;\n`;\n","import * as React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button } from \"../../components/Button/Button\";\nimport { Card } from \"../../components/Card/Card\";\nimport lessonData from \"../../resources/lessons.json\";\n\ninterface LessonCardProps {\n  lesson: Lesson;\n}\n\nconst LessonCard: React.FC<LessonCardProps> = ({ lesson }) => (\n  <Card>\n    <h2>{lesson.title}</h2>\n    <p>{lesson.description}</p>\n    <Link to={`/lesson${lesson.id}`}>\n      <Button>Start Lesson</Button>\n    </Link>\n  </Card>\n);\n\nexport const Overview: React.FC = () => {\n  const overview = lessonData.map((lesson) => (\n    <LessonCard {...{ lesson, key: lesson.id }} />\n  ));\n\n  return <div>{overview}</div>;\n};\n","import * as React from \"react\";\nimport styled, { keyframes } from \"styled-components\";\n\nconst cursorBlink = keyframes`\n    0% {\n      background-color: yellow;\n    }\n    100% {\n      background-color: transparent;\n    }\n`;\n\nexport const StyledExerciseChar = styled.span`\n  font-family: \"Courier New\";\n`;\n\nconst CharOk = styled(StyledExerciseChar)`\n  background-color: lightgreen;\n`;\n\nconst CharError = styled(StyledExerciseChar)`\n  background-color: red;\n`;\n\nconst CurrentChar = styled(StyledExerciseChar)`\n  background-color: yellow;\n  animation-name: ${cursorBlink};\n  animation-duration: 8s;\n  animation-iteration-count: infinite;\n`;\ninterface IExerciseChar {\n  data: CharField;\n  isCurrent: boolean;\n}\n\nexport const ExerciseChar: React.FC<IExerciseChar> = ({ data, isCurrent }) => {\n  let displayChar = <>{data.value}</>;\n  if (data.value === \"\\n\") {\n    displayChar = (\n      <span>\n        <br />\n      </span>\n    );\n  }\n  const displayMap = {\n    ok: CharOk,\n    error: CharError,\n    current: CurrentChar,\n    transparent: StyledExerciseChar,\n  };\n  const displayType = isCurrent ? \"current\" : data.color;\n  const DisplayElement = displayMap[displayType];\n\n  return <DisplayElement>{displayChar}</DisplayElement>;\n};\n","import React, { useState, useEffect } from \"react\";\nimport { ExerciseChar } from \"../../../components/ExerciseChar/ExerciseChar\";\n\nexport const Exercise: React.FC<{\n  lesson: CharField[];\n  completeLesson: (stats: { mistakes: number; time: number }) => void;\n}> = ({ lesson, completeLesson }) => {\n\n  const [exerciseFields, setExerciseFields] = useState<CharField[]>(lesson);\n  const [currentIndex, setCurrentIndex] = useState<number>(0);\n  const [startTime, setStartTime] = useState<Date>(new Date())\n\n  const isLastIndex = currentIndex === exerciseFields.length;\n\n  useEffect(() => {\n    const handleKeyPress = (e: KeyboardEvent) => {\n      if (e.key === \"Space\" && e.target === document.body) {\n        e.preventDefault();\n      }\n\n      if (currentIndex === 0) {\n        setStartTime(new Date());\n      }\n\n      if (isLastIndex) {\n        completeLesson({\n          mistakes: calculateMistakes(exerciseFields),\n          time: calculatePassedTime(startTime)\n        })\n        return;\n      }\n      const keyValue = e.key === \"Enter\" ? \"\\n\" : e.key;\n\n      const newExerciseFields = [...exerciseFields];\n      const field = exerciseFields[currentIndex];\n      newExerciseFields[currentIndex] = {\n        color: field.value === keyValue ? \"ok\" : \"error\",\n        value: field.value,\n      };\n      setExerciseFields(newExerciseFields);\n      setCurrentIndex(currentIndex + 1);\n    };\n\n    document.addEventListener(\"keydown\", handleKeyPress);\n\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyPress);\n    };\n  }, [isLastIndex, exerciseFields, currentIndex, completeLesson, setStartTime, startTime]);\n\n  const text = exerciseFields.map((item, key) => (\n    <ExerciseChar key={key} data={item} isCurrent={key === currentIndex} />\n  ));\n\n  return <section>{text}</section>;\n};\n\nconst calculateMistakes = (lesson: CharField[]) => {\n  return lesson.filter((val) => val.color === \"error\").length;\n};\n\nexport const calculatePassedTime = (startTime: Date) => {\n  return ((new Date()).getTime() - startTime.getTime()) / 1000;\n};","export const i18n = {\n    Reset: \"Reset\",\n    Mistakes: \"Mistakes\",\n    Time: \"Time\"\n}","import * as React from \"react\";\n\nimport { Button } from \"../../../components/Button/Button\";\nimport { i18n } from \"../../../i18n/en\";\nimport { LessonStats } from \"../TypingLesson\";\n\nexport const ResultDisplay: React.FC<{\n  lessonStats: LessonStats;\n  resetAction: () => void;\n}> = ({ lessonStats, resetAction }) => {\n  const { mistakes, time } = lessonStats;\n  return (\n    <>\n      <ul>\n        <li>{i18n.Mistakes}: {mistakes}</li>\n        <li>{i18n.Time}: {time}</li>\n      </ul>\n      <Button onClick={resetAction}>{i18n.Reset}</Button>\n    </>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Card } from \"../../components/Card/Card\";\nimport { Exercise } from \"./subpages/Exercise\";\nimport { ResultDisplay } from \"./subpages/ResultDisplay\";\nimport { useParams } from \"react-router\";\nimport { loadLesson } from \"../../resources/loadLesson\";\n\nexport interface LessonStats {\n  mistakes: number;\n  time: number;\n}\n\nexport const TypingLesson: React.FC = () => {\n  const [isComplete, setComplete] = useState<boolean>(false);\n  const [lessonStats, setLessonStats] = useState<LessonStats>({\n    mistakes: 0,\n    time: 0,\n  });\n  const { id } = useParams<{id: string}>();\n  const lessonId = parseInt(id, 10);\n  const lesson = loadLesson(lessonId);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  const resetAction = () => setComplete(false);\n  const completeLesson = (stats: LessonStats) => {\n    setLessonStats(stats);\n    setComplete(true);\n  };\n\n  return (\n    <Card>\n      {isComplete ? (\n        <ResultDisplay {...{ resetAction, lessonStats }} />\n      ) : (\n        <Exercise {...{ lesson, completeLesson }} />\n      )}\n    </Card>\n  );\n};\n","import lessonData from \"./lessons.json\";\nexport const loadLesson = (id: number) => {\n  const lesson = lessonData.find((val: Lesson) => {\n    return val.id === id;\n  });\n  const exerciseFields: CharField[] = [];\n  if(lesson){\n    lesson.lesson.split(\"\").forEach((item) => {\n      exerciseFields.push({ value: item, color: \"transparent\" });\n    });\n  }\n\n  return exerciseFields;\n};\n","import * as React from \"react\";\nimport { Link, Route } from \"react-router-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport i18n from \"../src/i18n/en.json\";\nimport { NavBar } from \"./components/NavBar/NavBar\";\n\nimport { Overview } from \"./pages/overview/Overview\";\nimport { TypingLesson } from \"./pages/exercise/TypingLesson\";\n\nconst Navigation: React.FC = () => (\n  <NavBar>\n    <Link to=\"/\">\n      <h1>{i18n.APP_TITLE}</h1>\n    </Link>\n  </NavBar>\n);\n\nconst App: React.FC = () => {\n  return (\n    <Router>\n      <Navigation />\n\n      <Route exact={true} path=\"/\" component={Overview} />\n      <Route path=\"/lesson:id\" component={TypingLesson} />\n    </Router>\n  );\n};\n\nexport default App;\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\n\nimport \"typeface-roboto\";\nimport App from \"./App\";\n\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}