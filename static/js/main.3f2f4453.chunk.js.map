{"version":3,"sources":["components/Button/Button.module.css","components/NavBar/NavBar.module.css","components/Card/Card.module.css","components/ExerciseChar/ExerciseChar.module.css","components/NavBar/NavBar.tsx","components/Button/Button.tsx","components/Card/Card.tsx","pages/overview/Overview.tsx","components/ExerciseChar/ExerciseChar.tsx","pages/exercise/subpages/Exercise.tsx","pages/exercise/subpages/ResultDisplay.tsx","pages/exercise/TypingLesson.tsx","resources/loadLesson.ts","App.tsx","index.tsx"],"names":["module","exports","NavBar","children","className","styles","navbar","Button","onClick","color","button","Card","card","LessonCard","lesson","title","description","to","id","Overview","overview","lessonData","map","key","ExerciseChar","data","isCurrent","exerciseChar","data-current","data-state","value","Exercise","completeLesson","useState","exerciseFields","setExerciseFields","currentIndex","setCurrentIndex","startTime","setStartTime","isLastIndex","length","useEffect","handleKeyPress","e","target","document","body","preventDefault","Date","mistakes","calculateMistakes","time","calculatePassedTime","keyValue","newExerciseFields","field","addEventListener","removeEventListener","text","item","filter","val","getTime","ResultDisplay","lessonStats","resetAction","TypingLesson","isComplete","setComplete","setLessonStats","useParams","find","split","forEach","push","loadLesson","parseInt","window","scrollTo","stats","Navigation","i18n","APP_TITLE","App","exact","path","component","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.3f2f4453.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3QF_k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"NavBar_navbar__yNL3i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1eE8R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"exerciseChar\":\"ExerciseChar_exerciseChar__2BhX-\",\"cursor-blink\":\"ExerciseChar_cursor-blink__1ySeW\"};","import * as React from 'react';\nimport styles from './NavBar.module.css';\n\nexport const NavBar: React.FC = ({children}) => {\n    return <div className={styles.navbar}>\n        {children}\n    </div>\n}","import * as React from 'react';\nimport styles from './Button.module.css';\n\ntype colors = 'default' | 'primary'\n\ninterface IButtonProps {\n    onClick?: () => void;\n    color?: colors;\n}\n/**\n * A Button Component\n * A button executes\n * @param props\n */\nexport const Button: React.FC<IButtonProps> = ({ onClick, children, color = 'default' }) => {\n    return (<button\n        className={`${styles.button} ${styles[color]}`}\n        onClick = { onClick }\n        color={`${color}`}\n        >\n        { children }\n    </button >);\n}","import * as React from 'react';\nimport styles from './Card.module.css';\n\nexport const Card: React.FC = ({children}) => {\n    return <div className={styles.card}>\n        {children}\n    </div>\n}","import * as React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button } from \"../../components/Button/Button\";\nimport { Card } from \"../../components/Card/Card\";\nimport lessonData from \"../../resources/lessons.json\";\n\ninterface LessonCardProps {\n  lesson: Lesson;\n}\n\nconst LessonCard: React.FC<LessonCardProps> = ({ lesson }) => (\n  <Card>\n    <h2>{lesson.title}</h2>\n    <p>{lesson.description}</p>\n    <Link to={`/lesson${lesson.id}`}>\n      <Button>Start Lesson</Button>\n    </Link>\n  </Card>\n);\n\nexport const Overview: React.FC = () => {\n  const overview = lessonData.map((lesson) => (\n    <LessonCard {...{ lesson, key: lesson.id }} />\n  ));\n\n  return <div>{overview}</div>;\n};\n","import * as React from 'react';\nimport styles from './ExerciseChar.module.css'\n\ninterface IExerciseChar {\n    data: CharField;\n    isCurrent: boolean;\n}\n\nexport const ExerciseChar:React.FC<IExerciseChar> = ({data, isCurrent}) => {\n    return (\n        <span \n            className={styles.exerciseChar} \n            data-current={isCurrent}\n            data-state={data.color}\n        >\n            {data.value === '\\n' && (<span className=\"enter\"><br /></span>)}\n            {data.value}\n        </span>\n    );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { ExerciseChar } from \"../../../components/ExerciseChar/ExerciseChar\";\n\nexport const Exercise: React.FC<{\n  lesson: CharField[];\n  completeLesson: (stats: { mistakes: number; time: number }) => void;\n}> = ({ lesson = [], completeLesson }) => {\n\n  const [exerciseFields, setExerciseFields] = useState<CharField[]>(lesson);\n  const [currentIndex, setCurrentIndex] = useState<number>(0);\n  const [startTime, setStartTime] = useState<Date>()\n\n  const isLastIndex = currentIndex === exerciseFields.length;\n\n  useEffect(() => {\n    const handleKeyPress = (e: KeyboardEvent) => {\n      if (e.key === \"Space\" && e.target === document.body) {\n        e.preventDefault();\n      }\n\n      if (currentIndex === 0) {\n        setStartTime(new Date());\n      }\n\n      if (isLastIndex) {\n        completeLesson({\n          mistakes: calculateMistakes(exerciseFields),\n          time: calculatePassedTime(startTime)\n        })\n        return;\n      }\n      const keyValue = e.key === \"Enter\" ? \"\\n\" : e.key;\n\n      const newExerciseFields = [...exerciseFields];\n      const field = exerciseFields[currentIndex];\n      newExerciseFields[currentIndex] = {\n        color: field.value === keyValue ? \"ok\" : \"error\",\n        value: field.value,\n      };\n      setExerciseFields(newExerciseFields);\n      setCurrentIndex(currentIndex + 1);\n    };\n\n    document.addEventListener(\"keydown\", handleKeyPress);\n\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyPress);\n    };\n  }, [isLastIndex, exerciseFields, currentIndex, completeLesson, setStartTime, startTime]);\n\n  const text = exerciseFields.map((item, key) => (\n    <ExerciseChar key={key} data={item} isCurrent={key === currentIndex} />\n  ));\n\n  return <section>{text}</section>;\n};\n\nconst calculateMistakes = (lesson: CharField[]) => {\n  return lesson.filter((val) => val.color === \"error\").length;\n};\n\nexport const calculatePassedTime = (startTime: Date) => {\n  return ((new Date()).getTime() - startTime.getTime()) / 1000;\n};","import * as React from \"react\";\n\nimport { Button } from \"../../../components/Button/Button\";\nimport { LessonStats } from \"../TypingLesson\";\n\nexport const ResultDisplay: React.FC<{\n  lessonStats: LessonStats;\n  resetAction: () => void;\n}> = ({ lessonStats, resetAction }) => {\n  const { mistakes, time } = lessonStats;\n  return (\n    <>\n      <ul>\n        <li>Mistakes: {mistakes}</li>\n        <li>Time: {time}</li>\n      </ul>\n      <Button onClick={resetAction}>Reset</Button>\n    </>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Card } from \"../../components/Card/Card\";\nimport { Exercise } from \"./subpages/Exercise\";\nimport { ResultDisplay } from \"./subpages/ResultDisplay\";\nimport { useParams } from \"react-router\";\nimport { loadLesson } from \"../../resources/loadLesson\";\n\nexport interface LessonStats {\n  mistakes: number;\n  time: number;\n}\n\nexport const TypingLesson: React.FC = () => {\n  const [isComplete, setComplete] = useState<boolean>(false);\n  const [lessonStats, setLessonStats] = useState<LessonStats>({\n    mistakes: 0,\n    time: 0,\n  });\n  const { id } = useParams<{id: string}>();\n  const lessonId = parseInt(id, 10);\n  const lesson = loadLesson(lessonId);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  const resetAction = () => setComplete(false);\n  const completeLesson = (stats: LessonStats) => {\n    setLessonStats(stats);\n    setComplete(true);\n  };\n\n  return (\n    <Card>\n      {isComplete ? (\n        <ResultDisplay {...{ resetAction, lessonStats }} />\n      ) : (\n        <Exercise {...{ lesson, completeLesson }} />\n      )}\n    </Card>\n  );\n};\n","import lessonData from \"./lessons.json\";\nexport const loadLesson = (id: number) => {\n  const lesson = lessonData.find((val: Lesson) => {\n    return val.id === id;\n  });\n  const exerciseFields: CharField[] = [];\n  lesson.lesson.split(\"\").forEach((item) => {\n    exerciseFields.push({ value: item, color: \"transparent\" });\n  });\n  return exerciseFields;\n};\n","import * as React from \"react\";\nimport { Link, Route } from \"react-router-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport i18n from \"../src/i18n/en.json\";\nimport { NavBar } from \"./components/NavBar/NavBar\";\n\nimport { Overview } from \"./pages/overview/Overview\";\nimport { TypingLesson } from \"./pages/exercise/TypingLesson\";\n\nconst Navigation: React.FC = () => (\n  <NavBar>\n    <Link to=\"/\">\n      <h1>{i18n.APP_TITLE}</h1>\n    </Link>\n  </NavBar>\n);\n\nconst App: React.FC = () => {\n  return (\n    <Router>\n      <Navigation />\n\n      <Route exact={true} path=\"/\" component={Overview} />\n      <Route path=\"/lesson:id\" component={TypingLesson} />\n    </Router>\n  );\n};\n\nexport default App;\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\n\nimport \"typeface-roboto\";\nimport App from \"./App\";\n\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\") as HTMLElement);\n"],"sourceRoot":""}