{"version":3,"sources":["components/Button/Button.module.css","components/Card/Card.module.css","components/ExerciseChar/ExerciseChar.module.css","components/NavBar/NavBar.module.css","components/Button/Button.tsx","components/Card/Card.tsx","Modules/Overview.tsx","Modules/TypingLessons/Stores/ExerciseStore.ts","components/ExerciseChar/ExerciseChar.tsx","Modules/TypingLessons/Components/Exercise.tsx","Modules/TypingLessons/Components/ResultDisplay.tsx","Modules/TypingLessons/TypingLesson.tsx","components/NavBar/NavBar.tsx","App.tsx","index.tsx"],"names":["module","exports","Button","onClick","children","color","className","styles","button","Card","card","lessonData","require","LessonCard","lesson","title","description","to","id","Overview","overview","map","val","key","exerciseStore","action","bound","text","startTime","endTime","this","exerciseFields","currentIndex","userReturn","value","split","forEach","item","push","Date","lessonComplete","startLesson","filter","length","getTime","observable","computed","ExerciseChar","data","isCurrent","exerciseChar","data-current","data-state","Exercise","observer","handleKeyPress","e","pressedKey","target","document","body","preventDefault","endLesson","addEventListener","setExercise","removeEventListener","React","ResultDisplay","mistakes","time","reset","TypingLesson","find","toString","props","lessonId","window","scrollTo","NavBar","navbar","Navigation","App","exact","path","component","render","match","params","ReactDOM","getElementById"],"mappings":"4GACAA,EAAOC,QAAU,CAAC,OAAS,yB,4nyECA3BD,EAAOC,QAAU,CAAC,KAAO,qB,mBCAzBD,EAAOC,QAAU,CAAC,aAAe,mCAAmC,eAAe,qC,mBCAnFD,EAAOC,QAAU,CAAC,OAAS,yB,+MCadC,EAAkC,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,SAAkC,IAAxBC,aAAwB,MAAhB,UAAgB,EACzF,OAAQ,0BACJC,UAAS,UAAKC,IAAOC,OAAZ,YAAsBD,IAAOF,IACtCF,QAAYA,EACZE,MAAK,UAAKA,IAERD,I,iBCjBGK,EAAkB,SAAC,GAAgB,IAAfL,EAAc,EAAdA,SAC7B,OAAO,uBAAKE,UAAWC,IAAOG,MACzBN,ICIHO,EAA4BC,EAAQ,IAMpCC,EAAyC,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OAC7C,gBAAC,EAAD,KACE,0BAAKA,EAAOC,OACZ,yBAAID,EAAOE,aACX,gBAAC,IAAD,CAAMC,GAAE,iBAAYH,EAAOI,KACzB,gBAAC,EAAD,wBASOC,EAAsB,WAEjC,IAAMC,EAAWT,EAAWU,IAAI,SAACC,GAAD,OAC9B,uBAAKC,IAAKD,EAAIJ,IACZ,gBAAC,EAAD,CAAYJ,OAAQQ,OAIxB,OACE,2BACGF,I,sCC2BMI,EAAgB,I,EAjD1BC,IAAOC,M,+KAJRC,KAAe,G,KACfC,e,OACAC,a,yDAGWP,GACTQ,KAAKC,eAAeD,KAAKE,cAAcC,WAAaX,EACpDQ,KAAKC,eAAeD,KAAKE,cAAc3B,MACpCyB,KAAKC,eAAeD,KAAKE,cAAcE,QAAUZ,EAAO,KAAO,QAClEQ,KAAKE,iB,oCAIQ,IAAD,OACZF,KAAKC,eAAiB,GACtBD,KAAKH,KACFQ,MAAM,IACNC,QAAQ,SAACC,GACR,EAAKN,eAAeO,KAAK,CAAEJ,MAAOG,EAAMhC,MAAO,kBAEnDyB,KAAKE,aAAe,I,oCAUpBF,KAAKF,UAAY,IAAIW,KACrBT,KAAKU,gBAAiB,I,kCAKtBV,KAAKD,QAAU,IAAIU,KACnBT,KAAKU,gBAAiB,I,8BAKtBV,KAAKC,eAAiB,GACtBD,KAAKW,gB,+BAlBL,OAAOX,KAAKC,eAAeW,OAAO,SAAApB,GAAG,MAAkB,QAAdA,EAAIjB,QAAiBsC,S,2BAuB9D,OAAQb,KAAKD,QAAQe,UAAYd,KAAKF,UAAUgB,WAAa,Q,iDApD9DC,K,wEAAyC,M,0CACzCA,K,yEAAkC,K,4CAClCA,K,yEAAqC,K,uJAcrCpB,K,4GAWAqB,K,4GAKArB,K,6GAMAA,K,uGAMAA,K,kGAMAqB,K,qFCjDUC,EAAwC,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,UACzD,OACI,wBACI3C,UAAWC,IAAO2C,aAClBC,eAAcF,EACdG,aAAYJ,EAAK3C,OAED,OAAf2C,EAAKd,OAAmB,wBAAM5B,UAAU,SAAQ,4BAChD0C,EAAKd,QCXLmB,EADZC,YACD,6MAWIC,eAAiB,SAACC,GAAsB,IAC9BxB,EAA6BR,EAA7BQ,aAAcyB,EAAejC,EAAfiC,WACN,UAAVD,EAAEjC,KAAmBiC,EAAEE,SAAWC,SAASC,MAC3CJ,EAAEK,iBAGF7B,IAAiBR,EAAcG,KAAKgB,QAK1B,UAAVa,EAAEjC,IACFkC,EAAW,MAEXA,EAAWD,EAAEjC,KAGI,IAAjBS,GACAR,EAAciB,eAXdjB,EAAcsC,aAlB1B,mFAGQH,SAASI,iBAAiB,WAAYjC,KAAKyB,gBAC3C/B,EAAcwC,gBAJtB,6CAQQL,SAASM,oBAAoB,WAAYnC,KAAKyB,kBARtD,+BAkCQ,IAAM5B,EAAOH,EAAcO,eACtBV,IAAI,SAACgB,EAAMd,GAAP,OACD,gBAAC,EAAD,CACIA,IAAKA,EACLyB,KAAMX,EACNY,UAAW1B,IAAQC,EAAcQ,iBAI7C,OACI,+BACKL,OA7CjB,GAA8BuC,eAA9B,ECAaC,EAA2Bb,YAAS,kBAC7C,gCACI,0BACI,uCAAe9B,EAAc4C,UAC7B,mCAAW5C,EAAc6C,OAE7B,gBAAC,EAAD,CAAQlE,QAAS,WAAQqB,EAAc8C,UAAvC,YCJJ3D,EAAaC,EAAQ,IAMZ2D,EADZjB,YACD,+LAEwB,IAAD,OACfxC,EAASH,EAAW6D,KAAK,SAAClD,GAC5B,OAAOA,EAAIJ,GAAGuD,aAAe,EAAKC,MAAMC,WAE1CnD,EAAcG,KAAOb,EAAOA,OAE5B8D,OAAOC,SAAS,EAAG,KARvB,+BAYI,OAAIrD,EAAcgB,eAEd,gBAAC,EAAD,KACE,gBAAC2B,EAAD,OAKF,gBAAC,EAAD,KACE,gBAAC,EAAD,WArBV,GAAkCD,eAAlC,E,iBCZaY,EAAoB,SAAC,GAAgB,IAAf1E,EAAc,EAAdA,SAC/B,OAAO,uBAAKE,UAAWC,IAAOwE,QACzB3E,ICEH4E,E,iLAEF,OACE,gBAAC,EAAD,KACE,gBAAC,IAAD,CAAM/D,GAAG,KAAI,gD,GAJIiD,aA4BVe,E,iLAfX,OACE,gCACE,gBAAC,EAAD,MACA,gBAAC,IAAD,CAAOC,OAAO,EAAMC,KAAK,IAAIC,UAAWjE,IACxC,gBAAC,IAAD,CACEgE,KAAK,aACLE,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OACN,gBAAC,EAAD,CAAcX,SAAUW,EAAMC,OAAOrE,a,GAT/BgD,a,MCTlBsB,SACE,gBAAC,IAAD,KACE,gBAAC,EAAD,OAEF7B,SAAS8B,eAAe,W","file":"static/js/main.9c83582f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3QF_k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1eE8R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"exerciseChar\":\"ExerciseChar_exerciseChar__2BhX-\",\"cursor-blink\":\"ExerciseChar_cursor-blink__1ySeW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"NavBar_navbar__yNL3i\"};","import * as React from 'react';\nimport styles from './Button.module.css';\n\ntype colors = 'default' | 'primary'\n\ninterface IButtonProps {\n    onClick?: () => void;\n    color?: colors;\n}\n/**\n * A Button Component\n * A button executes\n * @param props\n */\nexport const Button: React.SFC<IButtonProps> = ({ onClick, children, color = 'default' }) => {\n    return (<button\n        className={`${styles.button} ${styles[color]}`}\n        onClick = { onClick }\n        color={`${color}`}\n        >\n        { children }\n    </button >);\n}","import * as React from 'react';\nimport styles from './Card.module.css';\n\nexport const Card: React.SFC = ({children}) => {\n    return <div className={styles.card}>\n        {children}\n    </div>\n}","/// <reference path=\"./resources/lessons.d.ts\" />\n\n\nimport * as React from 'react';\nimport { Button } from '../components/Button/Button';\nimport { Card } from '../components/Card/Card';\nimport { Link } from 'react-router-dom';\n\n\nconst lessonData: Array<Lesson> = require('./resources/lessons.json');\n\ninterface LessonCardProps {\n  lesson: Lesson;\n}\n\nconst LessonCard: React.SFC<LessonCardProps> = ({ lesson }) => (\n  <Card>\n    <h2>{lesson.title}</h2>\n    <p>{lesson.description}</p>\n    <Link to={`/lesson${lesson.id}`}>\n      <Button>\n        Start Lesson\n      </Button>\n    </Link>\n\n\n  </Card>\n);\n\nexport const Overview: React.SFC = () => {\n\n  const overview = lessonData.map((val) => (\n    <div key={val.id}>\n      <LessonCard lesson={val} />\n    </div>\n  ));\n\n  return (\n    <div>\n      {overview}\n    </div>\n  );\n\n};","import { action, computed, observable } from 'mobx';\n\nexport interface CharField {\n  value: string;\n  userReturn?: string;\n  color: string;\n}\n\nclass ExerciseStore {\n  @observable exerciseFields: CharField[] = [];\n  @observable currentIndex: number = 0;\n  @observable lessonComplete: boolean = false;\n\n  text: string = '';\n  startTime: Date;\n  endTime: Date;\n\n  @action.bound\n  pressedKey(val: string) {\n    this.exerciseFields[this.currentIndex].userReturn = val;\n    this.exerciseFields[this.currentIndex].color =\n      (this.exerciseFields[this.currentIndex].value === val) ? 'ok' : 'error';\n    this.currentIndex++;\n  }\n\n  @action\n  setExercise() {\n    this.exerciseFields = [];\n    this.text\n      .split('')\n      .forEach((item) => {\n        this.exerciseFields.push({ value: item, color: 'transparent' });\n      });\n    this.currentIndex = 0;\n  }\n\n  @computed\n  get mistakes() {\n    return this.exerciseFields.filter(val => val.color === 'red').length;\n  }\n\n  @action\n  startLesson() {\n    this.startTime = new Date();\n    this.lessonComplete = false;\n  }\n\n  @action\n  endLesson() {\n    this.endTime = new Date();\n    this.lessonComplete = true;\n  }\n\n  @action\n  reset() {\n    this.exerciseFields = [];\n    this.startLesson();\n  }\n\n  @computed\n  get time() {\n    return (this.endTime.getTime() - this.startTime.getTime()) / 1000;\n  }\n\n}\n\nexport const exerciseStore = new ExerciseStore();","import * as React from 'react';\nimport styles from './ExerciseChar.module.css'\n\nimport { CharField } from '../../Modules/TypingLessons/Stores/ExerciseStore';\n\ninterface IExerciseChar {\n    data: CharField;\n    isCurrent: boolean;\n}\n\nexport const ExerciseChar:React.SFC<IExerciseChar> = ({data, isCurrent}) => {\n    return (\n        <span \n            className={styles.exerciseChar} \n            data-current={isCurrent}\n            data-state={data.color}\n        >\n            {data.value === '\\n' && (<span className=\"enter\"><br /></span>)}\n            {data.value}\n        </span>\n    );\n}\n","import * as React from 'react';\n\nimport { observer } from 'mobx-react';\nimport { exerciseStore } from '../Stores/ExerciseStore';\nimport { ExerciseChar } from '../../../components/ExerciseChar/ExerciseChar';\n\n@observer\nexport class Exercise extends React.Component {\n\n    componentDidMount() {\n        document.addEventListener('keypress', this.handleKeyPress);\n        exerciseStore.setExercise();\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keypress', this.handleKeyPress);\n    }\n\n    handleKeyPress = (e: KeyboardEvent) => {\n        let { currentIndex, pressedKey } = exerciseStore;\n        if (e.key === \"Space\" && e.target === document.body) {\n            e.preventDefault();\n        }\n\n        if (currentIndex === exerciseStore.text.length) {\n            exerciseStore.endLesson();\n            return;\n        }\n\n        if (e.key === 'Enter') {\n            pressedKey('\\n');\n        } else {\n            pressedKey(e.key);\n        }\n\n        if (currentIndex === 1) {\n            exerciseStore.startLesson();\n        }\n    }\n\n    render() {\n        const text = exerciseStore.exerciseFields\n            .map((item, key) => (\n                <ExerciseChar\n                    key={key}\n                    data={item}\n                    isCurrent={key === exerciseStore.currentIndex}\n                />\n            ));\n\n        return (\n            <section>\n                {text}\n            </section>\n        );\n    }\n}\n","import * as React from 'react';\n\nimport { observer } from 'mobx-react';\nimport { exerciseStore } from '../Stores/ExerciseStore';\nimport { Button } from '../../../components/Button/Button';\n\n\nexport const ResultDisplay: React.SFC = observer(() => (\n    <>\n        <ul>\n            <li>Mistakes: {exerciseStore.mistakes}</li>\n            <li>Time: {exerciseStore.time}</li>\n        </ul>\n        <Button onClick={() => { exerciseStore.reset(); }}>Reset</Button>\n    </>\n));","/// <reference path=\"./../resources/lessons.d.ts\" />\nimport { observer } from 'mobx-react';\nimport * as React from 'react';\nimport { Card } from '../../components/Card/Card';\nimport { Exercise } from './Components/Exercise';\nimport { ResultDisplay } from './Components/ResultDisplay';\nimport { exerciseStore } from './Stores/ExerciseStore';\n\n\nvar lessonData = require('./../resources/lessons.json');\ninterface TypingLessonProps {\n  lessonId: string;\n}\n\n@observer\nexport class TypingLesson extends React.Component<TypingLessonProps> {\n\n  componentWillMount() {\n    let lesson = lessonData.find((val: Lesson) => {\n      return val.id.toString() === this.props.lessonId;\n    });\n    exerciseStore.text = lesson.lesson;\n\n    window.scrollTo(0, 0);\n  }\n\n  render() {\n    if (exerciseStore.lessonComplete) {\n      return (\n        <Card>\n          <ResultDisplay />\n        </Card>\n      );\n    } else {\n      return (\n        <Card>\n          <Exercise />\n        </Card>\n      );\n    }\n\n  }\n}","import * as React from 'react';\nimport styles from './NavBar.module.css';\n\nexport const NavBar: React.SFC = ({children}) => {\n    return <div className={styles.navbar}>\n        {children}\n    </div>\n}","import * as React from 'react';\nimport { Route, Link } from 'react-router-dom';\nimport { Overview } from './Modules/Overview';\nimport { TypingLesson } from './Modules/TypingLessons/TypingLesson';\nimport { NavBar } from './components/NavBar/NavBar';\n\n\nclass Navigation extends React.Component {\n  render() {\n    return (\n      <NavBar>\n        <Link to=\"/\"><h1>Learn Typing</h1></Link>\n      </NavBar>\n    );\n  }\n\n}\n\nclass App extends React.Component<{}, {}> {\n  render() {\n    return (\n      <>\n        <Navigation />\n        <Route exact={true} path=\"/\" component={Overview} />\n        <Route\n          path=\"/lesson:id\"\n          render={({ match }) => (\n            <TypingLesson lessonId={match.params.id} />\n          )}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport 'typeface-roboto';\nimport App from './App';\n\nimport './index.css';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root') as HTMLElement\n);"],"sourceRoot":""}